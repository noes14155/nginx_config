# Jackett
location /jackett/ {
        proxy_pass http://<your-IP>:9117;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect  http://  $scheme://;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache_bypass $cookie_session;
        proxy_no_cache $cookie_session;
        proxy_buffers 32 4k;
}

# Ombi v3
location /ombi {
        proxy_pass http://<your-IP>:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # OMBI ALLOW API
        location /ombi/api { auth_request off;
                proxy_pass http://<your-IP>:5000/ombi/api;
        }
}

# Plex
location /plex {
    return 301 $scheme://$host/plex/;
}
location ^~ /plex/ {
    rewrite /plex(.*) $1 break;
    proxy_pass https://<your-IP>:32400;
    proxy_intercept_errors off;
    proxy_set_header X-Plex-Client-Identifier $http_x_plex_client_identifier;
    proxy_set_header X-Plex-Device $http_x_plex_device;
    proxy_set_header X-Plex-Device-Name $http_x_plex_device_name;
    proxy_set_header X-Plex-Platform $http_x_plex_platform;
    proxy_set_header X-Plex-Platform-Version $http_x_plex_platform_version;
    proxy_set_header X-Plex-Product $http_x_plex_product;
    proxy_set_header X-Plex-Token $http_x_plex_token;
    proxy_set_header X-Plex-Version $http_x_plex_version;
    proxy_set_header X-Plex-Nocache $http_x_plex_nocache;
    proxy_set_header X-Plex-Provides $http_x_plex_provides;
    proxy_set_header X-Plex-Device-Vendor $http_x_plex_device_vendor;
    proxy_set_header X-Plex-Model $http_x_plex_model;
}
if ($http_referer ~* /plex) {
    rewrite ^/web/(.*) /plex/web/$1? redirect;
}

# Radarr
location /radarr {
        proxy_pass http://<your-IP>:7878/radarr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_no_cache $cookie_session;
        # Allow the Radarr API through if you enable Auth on the block above
        location /radarr/api { auth_request off;
                proxy_pass http://<your-IP>:7878/radarr/api;
        }
}

# Sonarr
location /sonarr {
        proxy_pass http://<your-IP>:8989/sonarr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_no_cache $cookie_session;
        # Allow the Sonarr API through if you enable Auth on the block above
        location /sonarr/api { auth_request off;
                proxy_pass http://<your-IP>:8989/sonarr/api;
        }
}

# Tautulli 
location /tautulli {
        proxy_pass http://<your-IP>:9191;
        proxy_set_header 	Host 			$host;
        proxy_set_header 	X-Real-IP 		$remote_addr;
        proxy_set_header 	X-Forwarded-Host 	$server_name;
        proxy_set_header 	X-Forwarded-For 	$proxy_add_x_forwarded_for;
        proxy_set_header  	X-Forwarded-Proto 	$scheme;
        proxy_set_header  	X-Forwarded-Ssl   	on;
        proxy_redirect  	http://  		$scheme://;
        proxy_hide_header 	X-Frame-Options;
	# TAUTULLI ALLOW API
        location /tautulli/api { auth_request off;
                proxy_pass http://<your-IP>:9191/tautulli/api;
        }
	# TAUTULLI ALLOW SELFHOSTED NEWLETTER
        location /tautulli/newsletter { auth_request off;
                proxy_pass http://<your-IP>:9191/tautulli/newsletter;
        }
	# TAUTULLI ALLOW SELFHOSTED IMAGES
        location /tautulli/image { auth_request off;
                proxy_pass http://<your-IP>:9191/tautulli/image;
        }
}
# Bazarr 
location /bazarr {
        proxy_pass              http://<your-IP>:6767/bazarr;
        proxy_set_header        X-Real-IP               $remote_addr;
        proxy_set_header        Host                    $http_host;
        proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto       $scheme;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade                 $http_upgrade;
        proxy_set_header        Connection              "Upgrade";
        proxy_redirect off;
        # Allow the Bazarr API through if you enable Auth on the block above
        location /bazarr/api { auth_request off;
                proxy_pass http://<your-IP>:6767/bazarr/api;
        }
}

# utorrent
#username and password should be base64 encoded
location /gui {
		proxy_pass http://<your-IP>:8181;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Authorization "Basic <username:password base64 encoded>";
}

#Portainer
# Portainer redirect location block
location /portainer { 
	return 301 /portainer/;
}
# Portainer location block
location /portainer/ { 
	proxy_intercept_errors on; 
	proxy_set_header Connection ""; 
	proxy_pass http://<your-IP>:9000/;
}
# Portainer websocket location block
location /portainer/api/websocket/ { 
	proxy_set_header Upgrade $http_upgrade; 
	proxy_set_header Connection "upgrade"; 
	proxy_pass http://<your-IP>:9000/api/websocket/;
}

#Pi-Hole
location /pihole { 
	return 301 $scheme://$host/pihole/;
}
location ^~ /pihole/ {
	include /etc/nginx/config/betahome.v6.rocks/proxy.conf; 
	resolver <your-IP> valid=30s; 
	set $upstream_app pihole; 
	set $upstream_port 8181; 
	set $upstream_proto http; 
	proxy_pass $upstream_proto://<your-IP>:$upstream_port; 
	rewrite /pihole(.*) $1 break; 
	proxy_hide_header X-Frame-Options;
}
location /pihole/admin { return 301 
    $scheme://$host/pihole/admin/;
}
location ^~ /pihole/admin/ {
	include /etc/nginx/config/betahome.v6.rocks/proxy.conf; 
	resolver <your-IP> valid=30s; 
	set $upstream_app pihole; 
	set $upstream_port 8181; 
	set $upstream_proto http; 
	proxy_pass $upstream_proto://<your-IP>:$upstream_port; 
	rewrite /pihole(.*) $1 break; 
	proxy_hide_header X-Frame-Options;
}
